18:30:23: Creating resource group General
18:30:23: Creating resource group Internal
18:30:23: Creating resource group Autodetect
18:30:23: SceneManagerFactory for type 'DefaultSceneManager' registered.
18:30:23: Registering ResourceManager for type Material
18:30:23: Registering ResourceManager for type Mesh
18:30:23: Registering ResourceManager for type Skeleton
18:30:23: MovableObjectFactory for type 'ParticleSystem' registered.
18:30:23: ArchiveFactory for archive type FileSystem registered.
18:30:23: ArchiveFactory for archive type Zip registered.
18:30:23: ArchiveFactory for archive type EmbeddedZip registered.
18:30:23: DDS codec registering
18:30:23: FreeImage version: 3.15.4
18:30:23: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
18:30:23: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti
18:30:23: Registering ResourceManager for type HighLevelGpuProgram
18:30:23: Registering ResourceManager for type Compositor
18:30:23: MovableObjectFactory for type 'Entity' registered.
18:30:23: MovableObjectFactory for type 'Light' registered.
18:30:23: MovableObjectFactory for type 'BillboardSet' registered.
18:30:23: MovableObjectFactory for type 'ManualObject' registered.
18:30:23: MovableObjectFactory for type 'BillboardChain' registered.
18:30:23: MovableObjectFactory for type 'RibbonTrail' registered.
18:30:23: Loading library ./lib/RenderSystem_GL
18:30:23: Installing plugin: GL RenderSystem
18:30:23: OpenGL Rendering Subsystem created.
18:30:23: Plugin successfully installed
18:30:23: *-*-* OGRE Initialising
18:30:23: *-*-* Version 1.9.0 (Ghadamon)
18:30:23: Creating resource group 
18:30:23: Added resource location './media' of type 'FileSystem' to resource group ''
18:30:23: CPU Identifier & Features
18:30:23: -------------------------
18:30:23:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
18:30:23:  *      SSE: yes
18:30:23:  *     SSE2: yes
18:30:23:  *     SSE3: yes
18:30:23:  *      MMX: yes
18:30:23:  *   MMXEXT: yes
18:30:23:  *    3DNOW: no
18:30:23:  * 3DNOWEXT: no
18:30:23:  *     CMOV: yes
18:30:23:  *      TSC: yes
18:30:23:  *      FPU: yes
18:30:23:  *      PRO: yes
18:30:23:  *       HT: no
18:30:23: -------------------------
18:30:23: ******************************
*** Starting GLX Subsystem ***
******************************
18:30:23: Registering ResourceManager for type Texture
18:30:23: GLRenderSystem::_createRenderWindow "Ma fenetre", 1280x720 windowed  miscParams: FSAA=0 displayFrequency=51 Hz gamma=No vsync=No 
18:30:23: GLXWindow::create used FBConfigID = 237
18:30:23: GL_VERSION = 3.3.0 NVIDIA 331.38
18:30:23: GL_VENDOR = NVIDIA Corporation
18:30:23: GL_RENDERER = GeForce GTX 260/PCIe/SSE2
18:30:23: GL_EXTENSIONS = GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_blend_func_extended GL_ARB_clear_buffer_object GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_draw_buffers GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_ES2_compatibility GL_ARB_ES3_compatibility GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_separate_shader_objects GL_ARB_shader_bit_encoding GL_ARB_shader_objects GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback_instanced GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_x11_sync_object GL_EXT_import_sync_object GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KHR_debug GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_ES1_1_compatibility GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_path_rendering GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_buffer_load GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_expand_normal GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_vdpau_interop GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum 
18:30:23: Supported GLX extensions: GLX_EXT_visual_info GLX_EXT_visual_rating GLX_SGIX_fbconfig GLX_SGIX_pbuffer GLX_SGI_video_sync GLX_SGI_swap_control GLX_EXT_swap_control GLX_EXT_swap_control_tear GLX_EXT_texture_from_pixmap GLX_EXT_buffer_age GLX_ARB_create_context GLX_ARB_create_context_profile GLX_EXT_create_context_es_profile GLX_EXT_create_context_es2_profile GLX_ARB_create_context_robustness GLX_ARB_multisample GLX_NV_float_buffer GLX_ARB_fbconfig_float GLX_EXT_framebuffer_sRGB GLX_NV_multisample_coverage GLX_ARB_get_proc_address 
18:30:23: ***************************
18:30:23: *** GL Renderer Started ***
18:30:23: ***************************
18:30:23: Registering ResourceManager for type GpuProgram
18:30:23: GLSL support detected
18:30:23: GL: Using PBuffers for rendering to textures
18:30:23: RenderSystem capabilities
18:30:23: -------------------------
18:30:23: RenderSystem Name: OpenGL Rendering Subsystem
18:30:23: GPU Vendor: nvidia
18:30:23: Device Name: GeForce GTX 260/PCIe/SSE2
18:30:23: Driver Version: 3.3.0.0
18:30:23:  * Fixed function pipeline: yes
18:30:23:  * Hardware generation of mipmaps: yes
18:30:23:  * Texture blending: yes
18:30:23:  * Anisotropic texture filtering: yes
18:30:23:  * Dot product texture operation: yes
18:30:23:  * Cube mapping: yes
18:30:23:  * Hardware stencil buffer: yes
18:30:23:    - Stencil depth: 8
18:30:23:    - Two sided stencil support: yes
18:30:23:    - Wrap stencil values: yes
18:30:23:  * Hardware vertex / index buffers: yes
18:30:23:  * 32-bit index buffers: yes
18:30:23:  * Vertex programs: yes
18:30:23:  * Number of floating-point constants for vertex programs: 1024
18:30:23:  * Number of integer constants for vertex programs: 0
18:30:23:  * Number of boolean constants for vertex programs: 0
18:30:23:  * Fragment programs: yes
18:30:23:  * Number of floating-point constants for fragment programs: 512
18:30:23:  * Number of integer constants for fragment programs: 0
18:30:23:  * Number of boolean constants for fragment programs: 0
18:30:23:  * Geometry programs: yes
18:30:23:  * Number of floating-point constants for geometry programs: 2048
18:30:23:  * Number of integer constants for geometry programs: 0
18:30:23:  * Number of boolean constants for geometry programs: 0
18:30:23:  * Tesselation Hull programs: no
18:30:23:  * Number of floating-point constants for tesselation hull programs: 0
18:30:23:  * Number of integer constants for tesselation hull programs: 0
18:30:23:  * Number of boolean constants for tesselation hull programs: 0
18:30:23:  * Tesselation Domain programs: no
18:30:23:  * Number of floating-point constants for tesselation domain programs: 0
18:30:23:  * Number of integer constants for tesselation domain programs: 0
18:30:23:  * Number of boolean constants for tesselation domain programs: 0
18:30:23:  * Compute programs: no
18:30:23:  * Number of floating-point constants for compute programs: 0
18:30:23:  * Number of integer constants for compute programs: 0
18:30:23:  * Number of boolean constants for compute programs: 0
18:30:23:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl glsl100 glsl110 glsl120 gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
18:30:23:  * Texture Compression: yes
18:30:23:    - DXT: yes
18:30:23:    - VTC: yes
18:30:23:    - PVRTC: no
18:30:23:    - ATC: no
18:30:23:    - ETC1: no
18:30:23:    - ETC2: no
18:30:23:    - BC4/BC5: no
18:30:23:    - BC6H/BC7: no
18:30:23:  * Scissor Rectangle: yes
18:30:23:  * Hardware Occlusion Query: yes
18:30:23:  * User clip planes: yes
18:30:23:  * VET_UBYTE4 vertex element type: yes
18:30:23:  * Infinite far plane projection: yes
18:30:23:  * Hardware render-to-texture: yes
18:30:23:  * Floating point textures: yes
18:30:23:  * Non-power-of-two textures: yes
18:30:23:  * 1d textures: yes
18:30:23:  * Volume textures: yes
18:30:23:  * Multiple Render Targets: 1
18:30:23:    - With different bit depths: yes
18:30:23:  * Point Sprites: yes
18:30:23:  * Extended point parameters: yes
18:30:23:  * Max Point Size: 2047
18:30:23:  * Vertex texture fetch: yes
18:30:23:  * Number of world matrices: 0
18:30:23:  * Number of texture units: 16
18:30:23:  * Stencil buffer depth: 8
18:30:23:  * Number of vertex blend matrices: 0
18:30:23:    - Max vertex textures: 32
18:30:23:    - Vertex textures shared: yes
18:30:23:  * Render to Vertex Buffer : yes
18:30:23:  * Hardware Atomic Counters: no
18:30:23:  * GL 1.5 without VBO workaround: no
18:30:23:  * Frame Buffer objects: yes
18:30:23:  * Frame Buffer objects (ARB extension): no
18:30:23:  * Frame Buffer objects (ATI extension): no
18:30:23:  * PBuffer support: yes
18:30:23:  * GL 1.5 without HW-occlusion workaround: no
18:30:23:  * Vertex Array Objects: no
18:30:23:  * Separate shader objects: no
18:30:23: DefaultWorkQueue('Root') initialising on thread 7fe206c45840.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fa5d5700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f95d3700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fadd6700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f9dd4700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fb5d7700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f8dd2700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1e3fff700 starting.
18:30:23: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1e37fe700 starting.
18:30:23: Particle Renderer Type 'billboard' registered
18:30:23: Parsing scripts for resource group 
18:30:23: Parsing script Penguin.material
18:30:23: Parsing script test.material
18:30:23: Finished parsing scripts for resource group 
18:30:23: Creating resources for group 
18:30:23: All done
18:30:23: Parsing scripts for resource group Autodetect
18:30:23: Finished parsing scripts for resource group Autodetect
18:30:23: Creating resources for group Autodetect
18:30:23: All done
18:30:23: Parsing scripts for resource group General
18:30:23: Finished parsing scripts for resource group General
18:30:23: Creating resources for group General
18:30:23: All done
18:30:23: Parsing scripts for resource group Internal
18:30:23: Finished parsing scripts for resource group Internal
18:30:23: Creating resources for group Internal
18:30:23: All done
18:30:23: Mesh: Loading Cylinder.mesh.
18:30:23: Skeleton: Loading Cylinder.skeleton
18:30:23: OGRE EXCEPTION(5:ItemIdentityException): Can not find codec for 'png' image format.
There are no formats supported (no codecs registered). in Codec::getCodec at /home/sym/Ogre_build/OgreMain/src/OgreCodec.cpp (line 69)
18:30:23: Error loading texture Protecteur.png. Texture layer will be blank. Loading the texture failed with the following exception: OGRE EXCEPTION(5:ItemIdentityException): Can not find codec for 'png' image format.
There are no formats supported (no codecs registered). in Codec::getCodec at /home/sym/Ogre_build/OgreMain/src/OgreCodec.cpp (line 69)
18:30:23: Mesh: Loading robot.mesh.
18:30:23: Skeleton: Loading robot.skeleton
18:30:23: Can't assign material Examples/Robot to SubEntity of Robot because this Material does not exist. Have you forgotten to define it in a .material script?
18:30:23: *** Initializing OIS ***
18:31:01: DefaultWorkQueue('Root') shutting down on thread 7fe206c45840.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fa5d5700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f95d3700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fadd6700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f9dd4700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1fb5d7700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1f8dd2700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1e3fff700 stopped.
18:31:01: DefaultWorkQueue('Root')::WorkerFunc - thread 7fe1e37fe700 stopped.
18:31:01: *-*-* OGRE Shutdown
18:31:01: Unregistering ResourceManager for type Compositor
18:31:01: Unregistering ResourceManager for type Skeleton
18:31:01: Unregistering ResourceManager for type Mesh
18:31:01: Unregistering ResourceManager for type HighLevelGpuProgram
18:31:01: Uninstalling plugin: GL RenderSystem
18:31:01: Unregistering ResourceManager for type GpuProgram
18:31:01: ******************************
*** Stopping GLX Subsystem ***
******************************
18:31:01: Unregistering ResourceManager for type Texture
18:31:01: Plugin successfully uninstalled
18:31:01: Unloading library ./lib/RenderSystem_GL
